{% comment %}
  Renders a header search modal. Should be used with 'header.liquid'

  Accepts:
  - input_id: {String} Id for the search input element (required)

  Usage:
  {% render 'header-search', input_id: 'My-Id'%}
{% endcomment %}
        <form action="{{ routes.search_url }}" method="get" role="search" class="search search-modal__form" id="searchForm">
          <div class="field">
            <input
              class="search__input field__input"
              id="{{ input_id }}"
              type="search"
              name="q"
              value="{{ search.terms | escape }}"
              placeholder="Search entire store here..."
              {%- if settings.predictive_search_enabled -%}
                role="combobox"
                aria-expanded="false"
                aria-owns="predictive-search-results"
                aria-controls="predictive-search-results"
                aria-haspopup="listbox"
                aria-autocomplete="list"
                autocorrect="off"
                autocomplete="off"
                autocapitalize="off"
                spellcheck="false"
              {%- endif -%}
            >
            <label class="field__label" for="{{ input_id }}">{{ 'general.search.search' | t }}</label>
            <input type="hidden" name="options[prefix]" value="last">
            <button
              type="reset"
              class="reset__button field__button{% if search.terms == blank %} hidden{% endif %}"
              aria-label="{{ 'general.search.reset' | t }}"
            >
              <span class="svg-wrapper">
                {{- 'icon-reset.svg' | inline_asset_content -}}
              </span>
            </button>
            <button id="searchButton" class="search__button field__button" aria-label="{{ 'general.search.search' | t }}">
              <span class="svg-wrapper">
                {{- 'icon-search.svg' | inline_asset_content -}}
              </span>
            </button>
          </div>
          
        </form>



        <script defer>
          document.addEventListener("DOMContentLoaded", function() {
              const input = document.getElementById('Search-In-Modal');
              const button = document.getElementById('searchButton');
              const form = document.getElementById('searchForm');
      
              // Check input value and toggle button state when input changes
              input.addEventListener('input', function() {
                  if (input.value.trim() === "") {
                      button.disabled = true;
                      form.classList.remove('form-active'); // Ensure the class is removed when typing
                  } else {
                      button.disabled = false;
                  }
              });
      
              // Handle the button click
              button.addEventListener('click', function(event) {
                  if (input.value.trim() === "") {
                      event.preventDefault(); // Prevent form submission
                      form.classList.add('form-active'); // Add the class as feedback
                  } else {
                      form.classList.remove('form-active'); // Allow submission if valid
                      button.disabled = false; // Ensure button is enabled
                  }
              });
      
              // Remove the 'form-active' class when clicking outside the input and button
              document.addEventListener('click', function(event) {
                  // Check if the click is outside the input or button
                  if (!form.contains(event.target)) {
                      form.classList.remove('form-active');
                  }
              });
          });
      </script>
      